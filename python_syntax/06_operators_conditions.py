#############################################################
#                                                           #
#                  비교, 논리, 삼항연산자와 조건문                 #
#                                                           #
#############################################################

# 1) 비교연산자

# 비교 연산자는 주로 대소비교를 할 때 사용합니다.

# 대소비교
# >: 크다

# >=: 크거나 같다

# <: 작다

# <=: 작거나 같다

# 1 > 2
# [출력]

# False
# 10 >= 10
# [출력]

# True
# 9 < 10
# [출력]

# True
# 8 <= 7
# [출력]

# False
# 같다와 같지 않다

# == : 같음을 비교
# =는 대입 연산자 입니다.

# 코딩에서는 = 이 대입 연산자로 사용되기 때문에 ==을 사용하고 있습니다.

# 2 = 2
# 2 == 2
# [출력]

# True
# 2 == 3
# [출력]

# False
# != 같지 않음을 비교
# 2 != 2
# [출력]

# False
# 1 != 2
# [출력]

# True
# '나' != '너'
# [출력]

# True
# '나' != '나'
# [출력]


# False

##################################################################################################

# 2) 조건문과 삼항연산자

# 조건문이란 무엇일까요?

# 주어진 조건이 참인 경우 그 다음 내가 정한 규칙(로직)을 실행하는 개념입니다.

# if
# if는 어떤 조건이 성립한다면~ 이라는 뜻입니다.

# if 구문 끝에는 반드시 콜론(:)을 잊지 말아 주세요

if 5 > 3:
    print('참')
# [출력]

# 참
if 5 < 3:
    print('참')
    print('참')
    print('참')
    print('참')

print('끝')
# [출력]
# 끝

if 5 < 3:
    print('참')
else:
    print('그 외 나머지')
# else는 if 조건 후에 따라오며, if 가 아닌 경우에 실행 됩니다.


if 5 < 3:
    print('if 구문 실행')
else:
    print('else 구문 실행')
# [출력]
# else 구문 실행
# 하지만, else 만 단독으로 실행한다면?

# else:
#     print('else 구문 실행')
# elif
# elif 구문은 3가지 이상 분기 (조건)의 동작을 수행할 때 사용합니다.

if 3 > 5:
    print('if 구문')
elif 3 < 4:
    print('elif 구문')
else:
    print('이것도 저것도 아니다')
# [출력]

# elif 구문
# 그럼, elif 구문이 참인 여러 구문을 나열 했을 때는 어떻게 될까요?

# 한 번 고민해보고 실행하세요

if 3 < 5:
    print('if 구문')
elif 3 < 4:
    print('elif 1 구문')
elif 3 > 5:
    print('elif 2 구문')
elif 3 < 6:
    print('elif 3 구문')
else:
    print('이것도 저것도 아니다')
# [출력]
# if 구문

# 1 이나 0은 참 이나 거짓을 표현하기도 합니다.
if 1:
    print('참')
else:
    print('거짓')
# [출력]
# 참

if 0:
    print('참')
else:
    print('거짓')
# [출력]
# 거짓

# 삼항연산자
# (문법) (참인 값) if 조건 else (거짓인경우 값)

# 삼항연산자는 파이썬 문법에서 흔히 볼 수 있는 연산자 이며, 조건에 대한 참인 경우의 값 그렇지 않은 경우의 값을 뒤에 지정합니다.

age = 35

print("30세 이상입니다.") if age >= 30 else print("30세 이하입니다.")

num = 10

print(100) if 10 * 10 == 101 else print(200) if 10 * 11 == 100 else print(300)
# [출력]

# '30세 이상입니다.'

age = 20

print("30세 이상입니다.") if age >= 30 else print("30세 이하입니다.")
# [출력]
# '30세 이하입니다.'

##################################################################################################

# 연습문제
# 사용자에게 몸무게를 입력 받아 과체중인지 정상 체중인지 출력하는 프로그램을 만드세요.

# 몸무게가 100kg 초과이면 '귀하는 과체중 입니다.' 메시지를 출력하세요

# 몸무게가 100kg 이하이면 '귀하는 정상체중 입니다.' 메시지를 출력하세요

# 몸무게 입력은 input() 함수를 사용하여 입력 받습니다.

# 반드시 삼항연산자를 활용하세요

# # 입력 예시 (105로 입력한 경우)
# weight = input('몸무게를 입력해 주세요: ')
# # 코드를 입력해 주세요

# weight = input('몸무게를 입력해 주세요: ')

# print('귀하는 과체중 입니다.') if int(weight) > 100 else print('귀하는 정상체중 입니다.')

# [출력]

# '귀하는 과체중 입니다.'


##################################################################################################

# 3) 논리 연산자 (And, Or, Not)

# and나 or 조건은 두 가지 이상 조건을 다룰 때 활용합니다.

# and
# and 조건은 모두 만족할 때 참으로 인식합니다.
print(True and True and True)
# [출력]
# True

print(True and False and True)
# [출력]
# False

if (0 < 1) and (0 < 2):
    print('A도 참, B도 참: 모두 참')
else:
    print('거짓')
# [출력]
# A도 참, B도 참: 모두 참

if (0 < 1) and (0 > 2):
    print('A도 참, B도 참: 모두 참')
else:
    print('거짓')
# [출력]
# 거짓


# or
# or 조건은 조건 중 하나라도 만족할 때 참으로 인식합니다.
print(True or False or False)
# [출력]
# True

print(False or False or False)
# [출력]
# False

if (0 < 1) or ( 1 < 0):
    print('A 혹은 B중 하나라도 참')
else:
    print('거짓')
# [출력]
# A 혹은 B중 하나라도 참

if (10 < 1) or ( 1 < 0):
    print('A 혹은 B중 하나라도 참')
else:
    print('거짓')
# [출력]
# 거짓

# not
# bool 값을 반전시킵니다.

print(not True)
# [출력]

# False
print(not False)
# [출력]
# True

if not True:
    print('not True')
if not False:
    print('not False')
# [출력]
# not False

#####################################################################################################################

# 연습문제

# 문제 1
# (몸무게 + 100 - 키)를 비만 수치 공식이라고 가정합니다.

# 키와 몸무게를 입력받아 첫 번째 줄에 비만 수치를 출력합니다.

# 비만 수치가 0보다 크면 비만이라는 메시지를 출력하세요.


# 입력 예) info =[155, 60] (키, 몸무게 순)

# 출력[1]: 비만수치는 5 입니다.

# 출력[2]: 당신은 비만입니다.

info = [179, 103]
# # 코드를 입력해 주세요

bmi = info[1] + 100 - info[0]

print(f'비만수치는 {bmi}이고\n당신은 비만입니다.') if bmi > 0 else print(f'비만수치는 {bmi}이고\n당신은 정상입니다.')
# [출력]
# 비만수치는 5입니다

# 당신은 비만입니다.

# 문제 2
# 성적을 입력받아 90점 이상이면 A, 80점이상이면 B, 70점 이상이면 C, 70점 미만이면 D를 출력하세요

# 단, 점수가 음수이거나 100점을 초과하는 경우에는 '에러'를 출력하세요
# 힌트) input() 함수를 사용합니다.

# input() 함수는 사용자로부터 입력 값을 받을 수 있습니다.
# # 코드를 입력해 주세요
score = int(input('점수를 입력해주세요 : '))

if score > 0 and score < 70 :
    print('D')
elif score < 0 or score > 100 :
    print('Error')
elif score >= 90 :
    print('A')
elif score >= 80 :
    print('B')
elif score >= 70 :
    print('C')
# [출력]
# 점수를 입력해 주세요: 95

# A
# 95점 입력시: A

# 75점 입력시: C

# -10점 입력시: 에러

# 105점 입력시: 에러

# 문제 3
# 사용자로부터 달러, 엔, 유로, 또는 위안 금액을 입력받은 후 이를 원으로 변환하는 프로그램을 작성해 주세요.

# 각 통화별 환율은 다음과 같다.

# 달러: 1237.0

# 엔: 105.4

# 유로: 1349.69

# 위안: 194.57

# 사용자는 10 달러, 200 엔, 30 유로, 100 위안과 같이 금액과 통화명 사이에 공백을 넣어 입력한다고 가정합니다.

# 입력 예시) 10 달러

# 결과 예시) 11670.0원

# 달러 : *2, 엔 : *3, 유로 : *4, 위안: *5 라고 가정

# # 코드를 입력해 주세요
money = input('금액을 입력해주세요.')

splited_money = money.split()

if splited_money[1] == '달러' :
    print(f'{int(splited_money[0]) * 2}원입니다.')
if splited_money[1] == '엔' :
    print(f'{int(splited_money[0]) * 3}원입니다.')
if splited_money[1] == '유로' :
    print(f'{int(splited_money[0]) * 4}원입니다.')
if splited_money[1] == '위안' :
    print(f'{int(splited_money[0]) * 5}원입니다.')        
# [출력]

# 입력: 10 달러

# 12370.0 원

from auto_commit import git_auto_push
git_auto_push('operators & conditions')